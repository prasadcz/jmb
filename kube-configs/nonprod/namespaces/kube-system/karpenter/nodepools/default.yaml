apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: default
  annotations:
    kubernetes.io/description: "General purpose NodePool for generic workloads"
spec:
  template:
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot","on-demand"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["t"]
        - key: karpenter.k8s.aws/instance-family
          operator: In
          values: ["t3a"]
        - key: karpenter.k8s.aws/instance-generation
          operator: In
          values: ["3"]
        - key: karpenter.k8s.aws/instance-cpu
          operator: In
          values: ["4"]
#        - key: karpenter.k8s.aws/instance-memory
#          operator: In
#          values: ["4", "8", "16", "32"]
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: default
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: Ubuntu # Ubuntu
  role: "karpenter_node_role" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "nonprod_cluster" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "nonprod_cluster" # replace with your cluster name
  amiSelectorTerms:
    - id: ami-09e468cb9b196cc1a
  userData: |
    #!/bin/bash
    set -ex
    /etc/eks/bootstrap.sh nonprod_cluster --kubelet-extra-args --container-runtime containerd

